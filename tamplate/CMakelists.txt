#Copyright (c) 2023  İsmai̇l Hakkı Metehan EROL 
# 
#Permission is hereby granted, free of charge, to any person obtaining a copy of this software
#and associated documentation files (the "Software"), to deal in the Software without restriction,
#including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
#and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do
#so, subject to the following conditions:
# 
#The above copyright notice and this permission notice shall be included in all copies or substantial
#portions of the Software.
# 
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING 
#BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
#NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
#DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


# cmake -S . -B build -G "MinGW Makefiles"
cmake_minimum_required(VERSION ${CMAKE_VERSION})

# add cmake toolchain for sdcc
#set(CMAKE_TOOLCHAIN_FILE ${CMAKE_CURRENT_LIST_DIR}/../sdcc-toolchain.cmake)

#using PWD as project& executable name
get_filename_component(ProjectId ${CMAKE_CURRENT_LIST_DIR} NAME)
string(REPLACE " " "_" ProjectId ${ProjectId})

project(${ProjectId})
 
#NuLink Command Line Tool PATH-- change this to your path
#set(NULINK_PATH "C:/tools/Nuvoton Tools/NuLink Command Tool/NuLink.exe")

#include&src dir
set(PROJECT_INCLUDE_DIR ${CMAKE_CURRENT_LIST_DIR}/include)
set(PROJECT_SRC_DIR ${CMAKE_CURRENT_LIST_DIR}/src)
set(PROJECT_LIB_DIR ${CMAKE_CURRENT_LIST_DIR}/lib)
set(TARGET_DRIVER_PATH ${CMAKE_CURRENT_LIST_DIR}/../driver/${TARGET_DEV})

#seperate output dir
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

#source files
file(
        GLOB PROJECT_SRC_FILES CONFIGURE_DEPENDS
        ${PROJECT_SRC_DIR}/*.c
        ${PROJECT_SRC_DIR}/*.cpp
)
#Target Spesific
file(
        GLOB TARGET_DRIVER_SRC CMAKE_CONFIGURE_DEPENDS
        ${TARGET_DRIVER_PATH}/*.c
        ${TARGET_DRIVER_PATH}/std/src/*.c
        ${TARGET_DRIVER_PATH}/*.cpp
        ${TARGET_DRIVER_PATH}/std/src/*.cpp
)
# Add Lib folder
file(
        GLOB PROJECT_LIB_FILES CONFIGURE_DEPENDS
        ${PROJECT_LIB_DIR}/*.c
        ${PROJECT_LIB_DIR}/*.cpp
        ${PROJECT_LIB_DIR}/*/*.c
        ${PROJECT_LIB_DIR}/*/*.cpp
)

#set output
add_executable(
        ${ProjectId} 
        ${PROJECT_SRC_FILES} 
        ${PROJECT_LIB_FILES}
        ${TARGET_DRIVER_SRC}
)

set_target_properties(
        ${ProjectId}
	PROPERTIES
		COMPILE_FLAGS "-mmcs51 --model-small --stack-auto"
)


#include headers
target_include_directories(
        ${ProjectId} PUBLIC 
        ${PROJECT_INCLUDE_DIR}
        ${PROJECT_LIB_DIR}
        ${PROJECT_LIB_DIR}/*/
        ${PROJECT_SRC_DIR}
        ${TARGET_DRIVER_PATH}
        ${TARGET_DRIVER_PATH}/std/inc
)

add_custom_command(
        TARGET ${ProjectId} 
        POST_BUILD 
        #for converting ihx to hex
        COMMAND packihx bin/${ProjectId}.ihx > bin/${ProjectId}.hex
                && xxd -r -p bin/${ProjectId}.hex > bin/${ProjectId}.bin
                #del unnessesary file
                #&& del *.ihx *.lk *.map *.mem
)

add_custom_target(Upload
        COMMAND ${NULINK_PATH} all_nulink -w APROM ${ProjectId}.bin
        COMMENT "Running NuLink..."
)

add_dependencies(Upload ${ProjectId})